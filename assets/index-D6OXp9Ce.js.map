{"version":3,"mappings":"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","names":["home","__vitePreload","index$b","index$9","index$8","index$6","index$5","index$4","index$3","ErrorList","login$1","index$1","pinia","createPinia","piniaPluginPersistedstate","useSettingStoreHook","defineStore","title","useSettingStore","modules","__vite_glob_0_0","__vite_glob_0_1","routes","key","router","createRouter","createWebHashHistory","to","from","next","NProgress","app","createApp","App","store","err","vm","info","jsError","ErrorStackParser","getMessageInfo","status","msg","service","axios","config","error","response","ElMessage","requestInstance","conf","resolve","reject","res","data","get","url","params","post","login","refreshUserInfo","getAuthList","useUserStoreHook","roles","username","accessToken","useUserStore","showSetting","ref","useRouter","handleSetting","handlerClose","logout","route","useRoute","menuList","_a","route2","isCollapse","activeMenu","settingStore","getProjectList","projectList","searchData","reactive","fetchData","onMounted","dataList","computed","handleCurrentChange","val","handleSizeChange","onSearch","result","item","watch","getRoleList","getUserList","userList","roleWithAuthList","editShow","editUser","handleEditUser","row","v","ensureEditUser","obj","value","handleDeleteUser","fetchUserList","fetchRoleList","handleSearch","newVal","oldVal","roleList","onAddRole","ElMessageBox","action","onChangeAuth","query","authList","treeRef","checkedNode","fetchAuthList","props","__props","tagRef","setText","setTheme","_sfc_main","_b","len","originCodeLine","end","start","newLines","i","line","content","str","_hoisted_1","_hoisted_2","_hoisted_3","_openBlock","_createElementBlock","_createElementVNode","$options","js_error","isErr","activeNames","dialogVisible","tabActiveName","stackFrameObj","getErrorList","errorString","handleChange","openDialog","index","sourcemapUpload","file","reader","e","code","getSource","sourcemap","column","consumer","sourceMap","originalPosition","prevType","prevInstance","showMessage","option","type","useCompRef","formRef","storeUserLogin","userInfo","rules","submitForm","formEl","valid"],"ignoreList":[],"sources":["../../src/router/modules/home.ts","../../src/router/modules/login.ts","../../src/store/index.ts","../../src/store/setting/index.ts","../../src/router/index.ts","../../src/main.ts","../../src/http/status.ts","../../src/http/request.ts","../../src/api/auth.ts","../../src/store/user/index.ts","../../src/layout/components/Header.vue","../../src/layout/components/Aside.vue","../../src/layout/components/Breadcrumb.vue","../../src/api/project.ts","../../src/views/home/index.vue","../../src/api/role.ts","../../src/api/user.ts","../../src/views/user/index.vue","../../src/views/role/index.vue","../../src/views/auth/index.vue","../../src/components/auto/Tag.vue","../../src/views/error/Preview.vue","../../src/views/error/ErrorList.vue","../../src/utils/message.ts","../../src/hooks/useCompRef.ts","../../src/views/login/index.vue"],"sourcesContent":["export default {\n  path: '/',\n  name: 'Layout',\n  redirect: '/',\n  component: () => import(/* webpackChunkName: \"home\" */ '@/layout/index.vue'),\n  meta: {\n    role: ['common', 'admin'],\n    parentRouter: 'Home'\n  },\n  children: [\n    {\n      path: '/',\n      name: 'HomePage',\n      component: () => import(/* webpackChunkName: \"home\" */ '@/views/home/index.vue'),\n      meta: {\n        isShow: true,\n        title: '默认首页',\n        parentRouter: 'Layout'\n      }\n    },\n    {\n      path: '/user',\n      name: 'UserPage',\n      component: () => import(/* webpackChunkName: \"user\" */ '@/views/user/index.vue'),\n      meta: {\n        title: '用户模块',\n        isShow: true,\n        parentRouter: 'Layout'\n      }\n    },\n    {\n      path: '/role',\n      name: 'RolePage',\n      component: () => import(/* webpackChunkName: \"role\" */ '@/views/role/index.vue'),\n      meta: {\n        title: '角色模块',\n        isShow: true,\n        parentRouter: 'Layout'\n      }\n    },\n    {\n      path: '/auth',\n      name: 'AuthPage',\n      component: () => import(/* webpackChunkName: \"auth\" */ '@/views/auth/index.vue'),\n      meta: {\n        title: '权限模块',\n        isShow: true,\n        parentRouter: 'Layout'\n      }\n    },\n    {\n      path: '/about',\n      name: 'AboutPage',\n      component: () => import(/* webpackChunkName: \"about\" */ '@/views/about/index.vue'),\n      meta: {\n        title: '关于模块',\n        isShow: true,\n        parentRouter: 'Layout'\n      }\n    },\n    {\n      path: '/project',\n      name: 'projectPage',\n      component: () => import(/* webpackChunkName: \"home\" */ '@/views/project/index.vue'),\n      meta: {\n        isShow: true,\n        title: '项目模块',\n        parentRouter: 'Layout'\n      }\n    },\n    {\n      path: '/p',\n      name: 'ParentPage',\n      meta: {\n        isShow: true,\n        title: '父菜单',\n        parentRouter: 'Layout'\n      },\n      children: [\n        {\n          path: '/p/child1',\n          name: 'ChildPage1',\n          meta: {\n            isShow: true,\n            title: '子菜单1',\n            parentRouter: 'ParentPage'\n          }\n        },\n        {\n          path: '/p/child2',\n          name: 'ChildPage2',\n          meta: {\n            isShow: true,\n            title: '子菜单2',\n            parentRouter: 'ParentPage'\n          }\n        },\n        {\n          path: '/p/child3',\n          name: 'ChildPage3',\n          meta: {\n            isShow: true,\n            title: '子菜单3',\n            parentRouter: 'ParentPage'\n          }\n        }\n      ]\n    },\n    {\n      path: '/errorView',\n      name: 'ErrorViewPage',\n      component: () => import('@/views/error/ErrorView.vue'),\n      meta: {\n        isShow: true,\n        title: '生产错误'\n      }\n    },\n    {\n      path: '/errorList',\n      name: 'ErrorListPage',\n      component: () => import('@/views/error/ErrorList.vue'),\n      meta: {\n        isShow: true,\n        title: '错误列表'\n      }\n    }\n  ]\n};\n","export default {\n  path: '/login',\n  name: 'login',\n  component: () => import('@/views/login/index.vue'),\n  meta: {},\n  children: []\n};\n","import { createPinia } from 'pinia';\nimport piniaPluginPersistedstate from 'pinia-plugin-persistedstate';\n\n// 初始化Pinia状态管理库\nconst pinia = createPinia();\n// 使用持久化插件\npinia.use(piniaPluginPersistedstate);\n\nexport default pinia;\n","import pinia from '..';\nimport { defineStore } from 'pinia';\n\nexport const useSettingStoreHook = defineStore('setting', {\n  state: () => ({\n    title: [] as string[],\n    // 是否显示侧边栏\n    isCollapse: false,\n    // 是否显示标签栏\n    isTagsView: true,\n    // 是否显示面包屑\n    isBreadcrumb: true,\n    // 是否显示logo\n    isLogo: true,\n    // 是否显示全屏\n    isFullScreen: false\n  }),\n  actions: {\n    setTitle(title: string[]) {\n      this.title = title;\n    },\n    setCollapse() {\n      this.isCollapse = !this.isCollapse;\n    },\n    setTagsView() {\n      this.isTagsView = !this.isTagsView;\n    },\n    setBreadcrumb() {\n      this.isBreadcrumb = !this.isBreadcrumb;\n    }\n  },\n  // 持久化\n  persist: {\n    key: 'setting',\n    storage: sessionStorage\n    // paths: [\"accessToken\"],\n  }\n});\n\nexport function useSettingStore() {\n  return useSettingStoreHook(pinia);\n}\n","import { createRouter, createWebHashHistory, RouteLocationNormalizedGeneric, RouteRecordRaw } from 'vue-router';\nimport 'nprogress/nprogress.css';\nimport NProgress from 'nprogress';\nimport { useSettingStore } from '@/store/setting';\n\n// 整体导入路由文件（默认是懒加载）\nconst modules: Record<string, any> = import.meta.glob('./modules/*.ts', {\n  eager: true /* 取消懒加载 */\n});\n\n// 配置路由\nconst routes: Array<RouteRecordRaw> = [];\nObject.keys(modules).forEach((key) => routes.push(modules[key].default));\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n\n// 白名单，不需要登录就可以访问的页面\nconst whiteList = ['/login', '/404', '/403'];\n// 处理面包屑路由\nconst settingStore = useSettingStore();\nexport const getTitle = (name: string, routes: RouteRecordRaw[]) => {\n  const names: string[] = [];\n  while (true) {\n    names.push(name);\n    const currentRoute = routes.find((route) => route.name === name);\n    const parentRoute = routes.find((route) => route.name === currentRoute?.meta?.parentRouter);\n    if (parentRoute) {\n      name = parentRoute.name as string;\n      continue;\n    } else {\n      break;\n    }\n  }\n  return names.reverse();\n};\nconst handleRouters = (to: RouteLocationNormalizedGeneric) => {\n  const { name: currentName } = to;\n  const titles = getTitle(currentName as string, router.getRoutes());\n  settingStore.setTitle(titles);\n};\n\n/**\n * 路由守卫\n */\nrouter.beforeEach((to, from, next) => {\n  // 进度条开始\n  NProgress.start();\n  // const token = sessionStorage.getItem('userInfo');\n  // if (token) {\n  //   if (to.path === '/login') {\n  //     next({ path: '/' });\n  //   } else {\n  //     next();\n  //   }\n  // } else {\n  //   if (whiteList.indexOf(to.path) > -1) {\n  //     next();\n  //   } else {\n  //     next('/login');\n  //   }\n  // }\n  // handleRouters(to);\n  next();\n});\n\nrouter.afterEach(() => {\n  // 进度条结束\n  NProgress.done();\n});\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport './styles/index.less';\n// import { registerECharts } from './plugins/echarts';\n// import monitor from '../monitor/dist/monitor.esm.js'; // 性能监控\nimport ErrorStackParser from 'error-stack-parser';\n// import { findCodeBySourcemap } from './utils';\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\n// app.use(monitor, {\n//   url: 'http://localhost:8000/reportData'\n// });\n// registerECharts(app); // 注册echarts插件\n\n/**\n * sourcemap线上错误精确还原源代码\n */\napp.config.errorHandler = (err: any, vm, info) => {\n  const errorStack = ErrorStackParser.parse(err as Error);\n  // findCodeBySourcemap(errorStack[0]);\n  // console.log('errorStack', errorStack);\n  const jsError = {\n    stack_frames: errorStack,\n    message: err.message,\n    stack: err.stack,\n    error_name: err.name\n  };\n  console.error(`触发一个${err.name}错误`);\n  localStorage.setItem('jsErrorList', JSON.stringify(jsError));\n};\n\napp.mount('#app');\n","export const getMessageInfo = (status: number | string): string => {\n  let msg = '';\n  switch (status) {\n    case 400:\n      msg = '请求错误(400)';\n      break;\n    case 403:\n      msg = '拒绝访问(403)';\n      break;\n    case 401:\n      msg = '未授权(401)';\n      break;\n    case 500:\n      msg = '服务器错误(500)';\n      break;\n    case 503:\n      msg = '服务不可用(503)';\n      break;\n    default:\n      msg = `连接出错(${status})!`;\n  }\n  return msg;\n};\n","import axios, { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { ElMessage } from 'element-plus';\nimport { getMessageInfo } from './status';\n\ninterface BaseResponse<T = any> {\n  code: number | string;\n  data: T;\n  message: string;\n  status?: number | string;\n}\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: import.meta.env.VITE_APP_USE_MOCK\n    ? import.meta.env.VITE_APP_MOCK_BASEURL\n    : import.meta.env.VITE_APP_API_BASEURL,\n  timeout: 15000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(\n  (config) => {\n    return config;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\nservice.interceptors.response.use(\n  (response) => {\n    if (response.status === 200) {\n      return response;\n    }\n    ElMessage.error(getMessageInfo(response.status));\n    return response;\n  },\n  (error) => {\n    const { response } = error;\n    if (response) {\n      ElMessage.error(getMessageInfo(response.status));\n      return Promise.reject(response.data);\n    }\n    ElMessage.error('网络连接异常，请稍后再试！');\n    return Promise.reject(error);\n  }\n);\n\nexport default service;\n\n// 此处相当于二次响应拦截\n// 为响应数据进行定制化处理\nconst requestInstance = <T = any>(config: AxiosRequestConfig): Promise<T> => {\n  const conf = config;\n  return new Promise((resolve, reject) => {\n    service.request<any, AxiosResponse<BaseResponse>>(conf).then((res: AxiosResponse<BaseResponse>) => {\n      const data = res.data; // 如果data.code为错误代码返回message信息\n      if (data.code != 0) {\n        ElMessage({\n          message: data.message,\n          type: 'error'\n        });\n        reject(data.message);\n      } else {\n        ElMessage({\n          message: data.message,\n          type: 'success'\n        }); // 此处返回data信息 也就是 api 中配置好的 Response类型\n        resolve(data.data as T);\n      }\n    });\n  });\n};\nexport function get<T = any, U = any>(config: AxiosRequestConfig, url: string, params?: U): Promise<T> {\n  return requestInstance({ ...config, url, method: 'GET', params: params });\n}\nexport function post<T = any, U = any>(config: AxiosRequestConfig, url: string, data: U): Promise<T> {\n  return requestInstance({ ...config, url, method: 'POST', data: data });\n}\n\nexport function put<T = any, U = any>(config: AxiosRequestConfig, url: string, params?: U): Promise<T> {\n  return requestInstance({ ...config, url, method: 'PUT', params: params });\n}\nexport function del<T = any, U = any>(config: AxiosRequestConfig, url: string, data: U): Promise<T> {\n  return requestInstance({ ...config, url, method: 'DELETE', data: data });\n}\n","import service, { get, post } from '@/http/request';\n\nexport type LoginRequest = {\n  username: string;\n  password: string;\n};\n\nexport type ReLoginRequest = {\n  accessToken: string;\n};\n\nexport type LoginResponse = {\n  username: string;\n  roles: string[];\n  permissions: string[];\n  accessToken: string;\n};\n\nexport const login = async (data: LoginRequest) => {\n  return post<LoginResponse>({}, '/login', data);\n};\n\nexport const refreshUserInfo = async (data?: ReLoginRequest) => {\n  return post<LoginResponse>({}, '/getUserInfo', data);\n};\n\n// export const getAuthList = async (data?: any) => {\n//   return get({}, '/getAuthList', data);\n// };\n\nexport const getAuthList = async (data?: any) => {\n  return service({\n    url: '/getAuthList',\n    method: 'get',\n    data\n  });\n};\n","import { defineStore } from 'pinia';\nimport pinia from '..';\nimport { login, refreshUserInfo } from '@/api';\n\nexport interface IUserState {\n  username: string;\n  accessToken: string;\n  refreshToken?: string;\n  roles: string[];\n}\n\nexport const useUserStoreHook = defineStore('userInfo', {\n  state: (): IUserState => ({\n    username: 'Topskys',\n    accessToken: '',\n    roles: ['admin']\n  }),\n  getters: {\n    // TODO: add getters\n  },\n  actions: {\n    // TODO: add actions\n    // 用户登录\n    storeUserLogin(data) {\n      return login(data).then((response) => {\n        const { roles = [], username, accessToken } = response;\n        this.roles = roles;\n        this.username = username;\n        this.accessToken = accessToken;\n        return response;\n      });\n    },\n    // 刷新token\n    storeRefreshUserInfo() {\n      if (this.username == 'Topskys' && this.accessToken != '') {\n        refreshUserInfo({\n          accessToken: this.accessToken\n        })\n          .then((res) => {\n            this.roles = res.roles;\n            this.username = res.username;\n            this.accessToken = res.accessToken;\n            return res;\n          })\n          .catch(() => {\n            this.accessToken = ' ';\n          });\n      }\n    }\n  },\n  // 持久化\n  persist: {\n    key: 'userInfo',\n    storage: sessionStorage\n    // paths: [\"accessToken\"],\n  }\n});\n\nexport function useUserStore() {\n  return useUserStoreHook(pinia);\n}\n","<template>\n  <div class=\"header\">\n    <div class=\"flex-center\">logo</div>\n    <div class=\"flex-grow\"></div>\n    <div class=\"flex-center m05 color-dark-black\">\n      <i-ep-user></i-ep-user>\n      {{ username }}\n    </div>\n    <div class=\"flex-center m05 color-dark-black setting\" @click=\"handleSetting\">\n      <i-ep-setting></i-ep-setting>\n    </div>\n  </div>\n  <el-drawer\n    v-model=\"showSetting\"\n    title=\"设置\"\n    size=\"30%\"\n    direction=\"rtl\"\n    :width-header=\"false\"\n    :show-close=\"false\"\n    append-to-body\n  >\n    <div class=\"setting-header\">\n      <h2>项目配置</h2>\n      <i-ep-close @click=\"handlerClose\"></i-ep-close>\n    </div>\n    <div class=\"logout\">\n      <el-button type=\"primary\" @click=\"logout\">退出</el-button>\n    </div>\n  </el-drawer>\n</template>\n\n<script setup lang=\"ts\">\nimport { useUserStoreHook } from '@/store/user';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\n\nlet showSetting = ref(false);\nconst router = useRouter();\nconst { username } = useUserStoreHook();\n\nconst handleSetting = () => {\n  showSetting.value = !showSetting.value;\n};\nconst handlerClose = () => {\n  showSetting.value = false;\n};\nconst logout = () => {\n  sessionStorage.removeItem('userInfo');\n  router.push('/login');\n};\n</script>\n\n<style lang=\"less\" scoped>\n.header {\n  display: flex;\n  padding: 0 15px;\n  width: 100%;\n  height: 60px;\n  box-shadow: 0 0 20px rgb(195 223 252/40%);\n  line-height: 60px;\n}\n\n.setting {\n  cursor: pointer;\n}\n\n.setting-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 50px;\n  color: var(--dawei-color-dark-black);\n}\n\n.logout {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n","<template>\n  <el-menu :default-active=\"activeMenu\" class=\"el-menu-vertical\" :collapse=\"isCollapse\" router>\n    <template v-for=\"menu in menuList\" :key=\"menu.path\">\n      <el-menu-item v-if=\"!menu.children\" :index=\"menu.path\">\n        {{ menu.meta?.title }}\n      </el-menu-item>\n      <el-sub-menu v-else :index=\"menu.path\">\n        <template #title>\n          <span>{{ menu.meta?.title }}</span>\n        </template>\n        <el-menu-item v-for=\"sub in menu.children\" :key=\"sub.path\" :index=\"sub.path\">\n          <span>{{ sub.meta?.title }}</span>\n        </el-menu-item>\n      </el-sub-menu>\n    </template>\n  </el-menu>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\n\nconst route = useRoute();\nconst router = useRouter();\n// 根据路由表生成菜单列表\n// 获取到的是扁平路由\n// const menuList = router.getRoutes().filter((route: any) => {\n// 获取保持到的是嵌套路由\nconst menuList = router.options.routes[0].children?.filter((route: any) => {\n  return route.meta?.isShow;\n});\n// 折叠菜单\nconst isCollapse = ref(false);\n// 当前路由的path\nconst activeMenu = route.path;\n</script>\n","<template>\n  <el-breadcrumb :separator-icon=\"ArrowRight\">\n    <el-breadcrumb-item v-for=\"item in settingStore.title\" :key=\"item\" :to=\"{ name: item }\">{{\n      item\n    }}</el-breadcrumb-item>\n  </el-breadcrumb>\n</template>\n<script setup lang=\"ts\">\nimport { useSettingStore } from '@/store/setting';\nimport { ArrowRight } from '@element-plus/icons-vue';\n\nconst settingStore = useSettingStore();\n</script>\n<style lang=\"less\" scoped>\n.el-breadcrumb {\n  margin-bottom: 20px;\n}\n</style>\n","import { get } from '@/http/request';\n\nexport const getProjectList = (data?: any) => {\n  return get({}, '/projects', data);\n};\n","<template>\n  <div class=\"home\">\n    <el-form inline :model=\"searchData\" class=\"search-form\">\n      <el-form-item label=\"项目名称\">\n        <el-input v-model=\"searchData.title\" placeholder=\"请输入项目名称\" />\n      </el-form-item>\n      <el-form-item label=\"项目详情\">\n        <el-input v-model=\"searchData.introduce\" placeholder=\"请输入项目详情\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onSearch\">查询</el-button>\n      </el-form-item>\n    </el-form>\n    <el-table :data=\"dataList\" border style=\"width: 100%\">\n      <el-table-column prop=\"id\" label=\"编号\" width=\"180\" />\n      <el-table-column prop=\"title\" label=\"标题\" width=\"180\" />\n      <el-table-column prop=\"introduce\" label=\"描述\" />\n    </el-table>\n    <el-pagination\n      v-model:current-page=\"searchData.currentPage\"\n      v-model:page-size=\"searchData.pageSize\"\n      background\n      :page-sizes=\"[5, 10, 15, 20, 25, 30]\"\n      size=\"default\"\n      layout=\"total,prev, pager, next,sizes\"\n      :total=\"searchData.dataCount\"\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { getProjectList } from '@/api/project';\n\ninterface IProject {\n  id: number;\n  userId: number;\n  title: string;\n  introduce: string;\n}\n\nlet projectList = ref<IProject[]>([]);\nlet searchData = reactive({\n  currentPage: 1,\n  pageSize: 10,\n  dataCount: 0, // total\n  title: '',\n  introduce: ''\n});\n\n// 请求项目列表总数据\nconst fetchData = () => {\n  getProjectList().then((res) => {\n    projectList.value = res || [];\n    searchData.dataCount = res.length;\n  });\n};\n\nonMounted(() => {\n  fetchData();\n});\n\n// 计算分页数据\nlet dataList = computed(() => {\n  return projectList.value.slice(\n    (searchData.currentPage - 1) * searchData.pageSize,\n    searchData.currentPage * searchData.pageSize\n  );\n});\n\n// 页面发生改变\nconst handleCurrentChange = (val: number) => {\n  searchData.currentPage = val;\n};\n// 每页条数发生改变\nconst handleSizeChange = (val: number) => {\n  searchData.pageSize = val;\n};\n\n// 搜索\nconst onSearch = () => {\n  let result: IProject[] = projectList.value;\n  if (searchData.title) {\n    result = projectList.value.filter((item) => item.title.indexOf(searchData.title) > -1);\n  }\n  if (searchData.introduce) {\n    result = projectList.value.filter((item) => item.introduce.indexOf(searchData.introduce) > -1);\n  }\n  projectList.value = result;\n  searchData.currentPage = 1;\n  searchData.dataCount = result.length;\n};\n\n// 监听搜索条件变化重新发起请求\nwatch([() => searchData.title, () => searchData.introduce], () => {\n  fetchData();\n});\n</script>\n","import { get } from '@/http/request';\nexport const getRoleList = async (data?: any) => {\n  return get({}, '/getRoleList', data);\n};\n","import { get } from '@/http/request';\nexport const getUserList = async (data?: any) => {\n  return get({}, '/getUserList', data);\n};\n","<template>\n  <div class=\"container\">\n    <el-form inline :model=\"searchData\" class=\"search-form\">\n      <el-form-item label=\"姓名\" prop=\"nickName\">\n        <el-input v-model=\"searchData.nickName\" placeholder=\"请输入姓名\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"角色\" prop=\"role\">\n        <el-select v-model=\"searchData.role\" placeholder=\"请选择角色\" multiple class=\"w192\">\n          <el-option :key=\"0\" label=\"全部\" :value=\"0\"></el-option>\n          <el-option v-for=\"item in roleWithAuthList\" :key=\"item.roleId\" :label=\"item.roleName\" :value=\"item.roleId\">{{\n            item.roleName\n          }}</el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\n      </el-form-item>\n    </el-form>\n    <el-table :data=\"userList\" border style=\"width: 100%\">\n      <el-table-column prop=\"id\" label=\"ID\" width=\"180\"></el-table-column>\n      <el-table-column prop=\"nickName\" label=\"姓名\"></el-table-column>\n      <el-table-column prop=\"role\" label=\"角色\">\n        <template #default=\"scope\">\n          <el-button v-for=\"item in scope.row.role\" :key=\"item.role\" link type=\"primary\" size=\"small\">\n            {{ item.roleName }}\n          </el-button>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"small\" link @click=\"handleEditUser(scope.row)\">编辑</el-button>\n          <el-button type=\"danger\" size=\"small\" link @click=\"handleDeleteUser(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog v-model=\"editShow\" title=\"编辑用户信息\">\n      <el-form :model=\"editUser\" size=\"large\">\n        <el-form-item label=\"用户昵称\">\n          <el-input v-model=\"editUser.nickName\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户角色\">\n          <el-select v-model=\"editUser.role\" placeholder=\"请选择角色\" multiple>\n            <el-option\n              v-for=\"item in roleWithAuthList\"\n              :key=\"item.roleId\"\n              :label=\"item.roleName\"\n              :value=\"item.roleId\"\n              >{{ item.roleName }}</el-option\n            >\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"editShow = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"ensureEditUser\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { getRoleList } from '@/api/role';\nimport { getUserList } from '@/api/user';\nimport { IEditUser, IQueryParams, IRoleWithAuth, IUser } from '@/types/common';\n\nconst userList = ref<IUser[]>([]);\nconst searchData = reactive<IQueryParams>({\n  nickName: '',\n  role: 0\n});\nconst roleWithAuthList = ref<IRoleWithAuth[]>([]);\nconst editShow = ref(false);\nlet editUser = reactive<IEditUser>({\n  id: 0,\n  nickName: '',\n  role: [],\n  userName: ''\n});\n\nconst handleEditUser = (row: IUser) => {\n  // 这样赋值会失去响应式\n  // editUser = { ...row,role:row.role.map(v=>v.role) };\n  // 保持应用响应式\n  Object.assign(editUser, { ...row, role: row.role.map((v) => v.role) });\n  editShow.value = true;\n};\n\nconst ensureEditUser = () => {\n  editShow.value = false;\n  // 取出来修改的对象\n  let obj: IUser = userList.value.find((item) => item.id === editUser.id)!;\n  // 修改了nickName\n  obj.nickName = editUser.nickName;\n  //  obj.role.splice(0, obj.role.length)  // 清除角色\n  obj.role = []; // 清除角色\n  roleWithAuthList.value.forEach((item) => {\n    if (editUser.role.find((value) => value === item.roleId)) {\n      obj.role.push({\n        role: item.roleId, // 角色id\n        roleName: item.roleName // 角色名称\n      });\n    }\n  });\n};\n\nconst handleDeleteUser = (row: IUser) => {\n  console.log(row);\n};\n\n// 请求用户列表\nconst fetchUserList = () => {\n  getUserList()\n    .then((res) => {\n      userList.value = res;\n    })\n    .catch(() => {});\n};\nconst fetchRoleList = () => {\n  // 请求角色列表\n  getRoleList()\n    .then((res) => {\n      roleWithAuthList.value = res;\n    })\n    .catch(() => {});\n};\n\nonMounted(() => {\n  fetchUserList();\n  fetchRoleList();\n});\n\nconst handleSearch = () => {\n  let res: IUser[] = [];\n  if (searchData.nickName || searchData.role) {\n    if (searchData.nickName) {\n      res = userList.value.filter((item) => {\n        return item.nickName.indexOf(searchData.nickName) !== -1;\n      });\n    }\n    if (searchData.role) {\n      res = searchData.nickName ? res : userList.value;\n      res = res.filter((item) => {\n        return item.role.find((value) => {\n          return value.role === searchData.role;\n        });\n      });\n    }\n  } else {\n    res = userList.value;\n  }\n  userList.value = res;\n};\n\nwatch([() => searchData.nickName, () => searchData.role], (newVal, oldVal) => {\n  if (searchData.nickName === '' || searchData.role === 0) {\n    handleSearch();\n  }\n});\n</script>\n<style scoped lang=\"less\">\n.search-form {\n  padding: 10px 0 0 10px;\n}\n\n.w192 {\n  width: 192px;\n}\n</style>\n","<template>\n  <div class=\"container\">\n    <el-form>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"onAddRole\">新增角色</el-button>\n      </el-form-item>\n    </el-form>\n    <el-table :data=\"roleList\" border style=\"width: 100%\">\n      <el-table-column prop=\"roleId\" label=\"ID\" width=\"180px\"></el-table-column>\n      <el-table-column prop=\"roleName\" label=\"角色名称\" width=\"180px\"></el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"small\" link @click=\"onChangeAuth(scope.row)\">修改权限</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { getRoleList } from '@/api/role';\n\ninterface IRole {\n  role: number;\n  roleName: string;\n  authority?: string[];\n}\n\nlet roleList = ref<IRole[]>([]);\nconst router = useRouter();\n\nconst fetchRoleList = () => {\n  getRoleList().then((res) => {\n    roleList.value = res;\n  });\n};\n\nonMounted(() => {\n  fetchRoleList();\n});\n\nconst onAddRole = () => {\n  ElMessageBox.prompt('请输入角色名称!', '添加角色', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消'\n  })\n    .then(({ value, action }) => {\n      if (value) {\n        roleList.value.push({\n          role: roleList.value.length + 1,\n          roleName: value,\n          authority: []\n        });\n        ElMessage({\n          type: 'success',\n          message: `${value}添加成功`\n        });\n      }\n    })\n    .catch((err) => {\n      ElMessage({\n        type: 'info',\n        message: `点击了取消按钮`\n      });\n    });\n};\n\nconst onChangeAuth = (row: IRole) => {\n  router.push({\n    path: 'auth',\n    query: {\n      id: row.role,\n      auth: row.authority\n    }\n  });\n};\n</script>\n","<template>\n  <div class=\"container\">\n    <el-tree\n      ref=\"treeRef\"\n      :data=\"authList\"\n      :props=\"{\n        children: 'roleList',\n        label: 'name'\n      }\"\n      show-checkbox\n      node-key=\"roleId\"\n      default-expand-all\n      highlight-current\n      :check-strictly=\"true\"\n      :default-checked-keys=\"checkedNode\"\n    ></el-tree>\n    <el-button type=\"primary\" @click=\"onChangeAuth\">修改权限</el-button>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { getAuthList } from '@/api';\n\nconst route = useRoute();\nconst { query } = route;\n\ninterface IAuth {\n  name: string;\n  roleId: number;\n  roleList?: IAuth[]; // 角色列表 子权限\n}\n\nlet authList = ref<IAuth[]>([]);\nlet treeRef = ref<any>(null);\nlet checkedNode = ref<number[]>([]);\n\n// 如果路由有参数，则tree默认选中\nif (query.auth) {\n  checkedNode.value = query.auth as any[];\n}\n\nconst fetchAuthList = () => {\n  getAuthList().then((res: any) => {\n    authList.value = res.data.data;\n  });\n};\n\nonMounted(() => {\n  fetchAuthList();\n});\n\nconst onChangeAuth = () => {\n  const selectedTreeNode = treeRef.value.getCheckedNodes();\n};\n</script>\n","<template>\n  <div class=\"custom-tag\">\n    <span v-bind=\"props\" ref=\"tagRef\" class=\"tag\"></span>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref, onMounted, defineProps } from 'vue';\nconst props = defineProps({\n  text: {\n    type: String,\n    default: null,\n    require: false\n  },\n  theme: {\n    type: String,\n    default: null,\n    require: false\n  }\n});\n\nconst tagRef = ref<HTMLElement>();\n\nconst setText = () => {\n  tagRef.value!.innerHTML = props.text;\n};\nconst setTheme = () => {\n  tagRef.value!.style.backgroundColor = props.theme;\n};\n\nonMounted(() => {\n  setText();\n  setTheme();\n});\n</script>\n<style lang=\"less\" scoped>\n.tag {\n  color: white;\n  background-color: blueviolet;\n}\n</style>\n","<template>\n  <div class=\"pre-code\">\n    <div class=\"error-detail\">\n      <pre class=\"error-code\" v-html=\"preLine()\"></pre>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'PreView',\n  props: {\n    origin: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  methods: {\n    preLine() {\n      console.log('------origin--------', this.origin, this.origin?.line, this.origin?.source);\n      // 错误的行数\n      const line = this.origin.line;\n      // 先获取源码有多少行\n      const originCodeLine = this.origin?.source?.split('\\n');\n      const len = originCodeLine.length - 1;\n      const start = line - 3 >= 0 ? line - 3 : 0;\n      const end = start + 5 >= len ? len : start + 5; // 最多展示6行\n      let newLines = [];\n      for (var i = start; i <= end; i++) {\n        const content = i + 1 + '.    ' + this.encodeHTML(originCodeLine[i]);\n        newLines.push(`<div class='code-line ${i + 1 == line ? 'heightlight' : ''}'>${content}</div>`);\n      }\n      return newLines.join('');\n    },\n    encodeHTML(str) {\n      if (!str || str.length == 0) return '';\n      return str.replace(/&/g, '&#38;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&#39;');\n    }\n  }\n};\n</script>\n<style>\n.error-code {\n  overflow: hidden;\n  padding: 10px;\n  font-family: consolas, monospace;\n  word-wrap: normal;\n}\n\n.code-line {\n  padding: 4px;\n}\n\n.heightlight {\n  color: #fff;\n  background: #f12926;\n}\n</style>\n","<template>\n  <div v-if=\"isErr\">\n    <pre>\n      {{ js_error.stack }}\n    </pre>\n    <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\n      <el-collapse-item v-for=\"(item, index) in js_error.stack_frames\" :key=\"index\" :title=\"item.source\" :name=\"index\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"20\">{{ item.fileName }}</el-col>\n          <el-col :span=\"4\">\n            <el-button type=\"primary\" size=\"small\" @click=\"openDialog(item, index)\">映射源码</el-button>\n          </el-col>\n        </el-row>\n        <el-row :gutter=\"20\">\n          <template v-if=\"item.originalSource\">\n            <!-- {{ item.originalSource }} -->\n            <Preview :origin=\"item.originalSource\" />\n          </template>\n          <template v-else>{{ item.functionName }}</template>\n        </el-row>\n      </el-collapse-item>\n    </el-collapse>\n    <el-dialog v-model=\"dialogVisible\" title=\"SourceMap源码映射\" width=\"500\">\n      <el-tabs v-model=\"tabActiveName\">\n        <el-tab-pane label=\"本地上传\" name=\"local\">\n          <el-upload drag :before-upload=\"sourcemapUpload\">\n            <i class=\"el-icon-upload\"></i>\n            <div>将文件拖拽到此处，或者<em>点击上传</em></div>\n          </el-upload>\n        </el-tab-pane>\n        <el-tab-pane label=\"远程加载\" name=\"remote\"> </el-tab-pane>\n      </el-tabs>\n    </el-dialog>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport { ElMessage } from 'element-plus';\nimport { onMounted, ref } from 'vue';\nimport sourceMap from 'source-map-js';\nimport Preview from './Preview.vue';\n\nconst js_error = ref<any>([]);\nconst isErr = ref(false);\nconst activeNames = ref('1');\nconst dialogVisible = ref(false);\nconst tabActiveName = ref('local');\nlet stackFrameObj = {\n  line: 0,\n  column: 0,\n  index: null\n};\n\nconst getErrorList = () => {\n  try {\n    const errorString = localStorage.getItem('jsErrorList');\n    if (!errorString) return;\n    js_error.value = JSON.parse(errorString);\n    isErr.value = true;\n  } catch (error: any) {\n    console.log('获取错误列表失败', error);\n  }\n};\n\nonMounted(() => {\n  getErrorList();\n});\n\nconst handleChange = (val: string) => {\n  //   console.log(val);\n};\n\nconst openDialog = (item: any, index: number) => {\n  dialogVisible.value = true;\n  stackFrameObj = {\n    line: item.lineNumber,\n    column: item.columnNumber,\n    index: index\n  };\n};\n\nconst sourcemapUpload = async (file: any) => {\n  if (file.name.substring(file.name.lastIndexOf('.') + 1) !== 'map') {\n    ElMessage({\n      message: '请上传正确的sourcemap文件',\n      type: 'error'\n    });\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n  reader.onload = async function (e: any) {\n    const code = await getSource(e?.target?.result, stackFrameObj.line, stackFrameObj.column);\n    js_error.value.stack_frames[stackFrameObj.index].originalSource = code;\n    dialogVisible.value = false;\n  };\n};\n\nconst getSource = async (sourcemap: any, line: number, column: number) => {\n  try {\n    const consumer = await new sourceMap.SourceMapConsumer(JSON.parse(sourcemap));\n    const originalPosition = consumer.originalPositionFor({ line, column });\n    const source = consumer.sourceContentFor(originalPosition.source);\n    // console.log('本地报错404source', source);\n    return {\n      source: source,\n      line: originalPosition.line,\n      column: originalPosition.column\n    };\n  } catch (e) {\n    ElMessage.error('sourcemap解析失败');\n  }\n};\n</script>\n","import { ElMessage, MessageHandler } from 'element-plus';\n\ninterface MessageOptions {\n  message: string;\n  type: 'success' | 'warning' | 'info' | 'error';\n  center?: boolean;\n  duration?: number;\n  showClose?: boolean;\n}\n\nlet prevType = '';\nlet prevInstance: MessageHandler | null = null;\n/**\n * 消息提示（单例模式）\n *\n * @param option 消息配置\n * @returns void\n */\nexport function showMessage(option: MessageOptions) {\n  const { type = '' } = option;\n  // 判断弹窗的类型是不是一致，一致就不弹出\n  if (prevInstance && type === prevType) {\n    return;\n  }\n  prevType = type;\n  if (prevInstance) prevInstance.close();\n\n  prevInstance = ElMessage({\n    ...option,\n    onClose: () => {\n      prevType = '';\n      prevInstance = null;\n    }\n  });\n}\n\nexport default showMessage;\n","import { ref } from 'vue';\n\n// 公共的组件实例类型\nexport function useCompRef<T extends abstract new (...args: any) => any>() {\n  return ref<InstanceType<T>>();\n}\n","<template>\n  <div class=\"login-box\">\n    <el-form ref=\"formRef\" :rules=\"rules\" :model=\"userInfo\" size=\"large\" class=\"form\">\n      <span class=\"form-title\">企业中台登录</span>\n      <el-form-item prop=\"username\">\n        <el-input v-model=\"userInfo.username\" placeholder=\"请输入用户名\" />\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input v-model=\"userInfo.password\" type=\"password\" placeholder=\"请输入密码\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" class=\"submit-button\" @click=\"submitForm(formRef)\">Submit</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { showMessage } from '@/utils';\nimport type { ElForm, FormInstance } from 'element-plus';\nimport { useUserStore } from '@/store/user';\nimport { useCompRef } from '@/hooks/useCompRef';\n\n// const formRef = ref<FormInstance>(); // 01\n// const formRef = ref<InstanceType<typeof ElForm>>(); // 设置标签实例类型 02\nconst formRef = useCompRef<typeof ElForm>(); // 设置标签实例类型 03\nconst { storeUserLogin } = useUserStore();\nconst router = useRouter();\n\nconst userInfo = reactive({\n  username: 'admin',\n  password: 'admin'\n});\n\nconst rules = reactive({\n  username: [\n    {\n      required: true,\n      message: '请输入用户名',\n      trigger: 'blur'\n    }\n  ],\n  password: [\n    {\n      required: true,\n      message: '请输入密码',\n      trigger: 'blur'\n    }\n  ]\n});\n\nconst submitForm = (formEl: FormInstance | undefined) => {\n  if (!formEl) return;\n  formEl.validate((valid) => {\n    if (valid) {\n      storeUserLogin(userInfo).then(() => {\n        router.push('/');\n      });\n    } else {\n      showMessage({ message: '用户名或密码错误', type: 'error' });\n    }\n  });\n};\n</script>\n<style lang=\"less\" scoped>\n// 优化：使用打包工具将变量文件导入每个vue业务组件中\n// @import '@/styles/variable.less'; // 01 需要导入的变量文件\n\n.login-box {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  // background: var(--dawei-background-color);\n  background: @bg; // 02 使用less变量，需要导入的变量文件，在main.ts中导入不管用，因为main是js文件，less文件无法识别\n\n  .form {\n    width: 300px;\n    height: max-content;\n  }\n\n  .form-title {\n    display: block;\n    margin-bottom: 20px;\n    font-size: 24px;\n    text-align: center;\n    font-weight: bold;\n  }\n\n  .submit-button {\n    width: 100%;\n  }\n}\n</style>\n"],"file":"assets/index-D6OXp9Ce.js"}